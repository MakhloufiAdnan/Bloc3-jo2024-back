name: Deploy to Heroku

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: VPS

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Check Java version
        run: java -version

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push backend Docker image
        run: |
          cd backend
          mvn clean install -DskipTests
          docker build -t ${{ secrets.DOCKER_USERNAME }}/jo2024-backend . 
          docker push ${{ secrets.DOCKER_USERNAME }}/jo2024-backend

      - name: Build & push frontend Docker image
        run: |
          cd frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/jo2024-frontend . 
          docker push ${{ secrets.DOCKER_USERNAME }}/jo2024-frontend

      # Installer Heroku CLI
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku --version  # Vérifier que la CLI est installée

      # Connexion à Heroku avec la clé API
      - name: Login to Heroku
        run: echo ${{ secrets.HEROKU_API_KEY }} | heroku auth:token

      # Déployer le backend sur Heroku
      - name: Deploy backend to Heroku
        run: |
          heroku container:push web --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend

      - name: Set backend Heroku config vars
        run: |
          heroku config:set POSTGRES_DB=${{ secrets.POSTGRES_DB }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set POSTGRES_USER=${{ secrets.POSTGRES_USER }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set JWT_SECRET=${{ secrets.JWT_SECRET }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set SMTP_HOST=${{ secrets.SMTP_HOST }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set SMTP_PORT=${{ secrets.SMTP_PORT }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set ID_GOOGLE=${{ secrets.ID_GOOGLE }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku config:set MDP_GOOGLE=${{ secrets.MDP_GOOGLE }} --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend

      # Déployer le frontend sur Heroku
      - name: Deploy frontend to Heroku
        run: |
          heroku container:push web --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend

      - name: Set frontend Heroku config vars
        run: |
          heroku config:set POSTGRES_DB=${{ secrets.POSTGRES_DB }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set POSTGRES_USER=${{ secrets.POSTGRES_USER }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set JWT_SECRET=${{ secrets.JWT_SECRET }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set SMTP_HOST=${{ secrets.SMTP_HOST }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set SMTP_PORT=${{ secrets.SMTP_PORT }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set ID_GOOGLE=${{ secrets.ID_GOOGLE }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend
          heroku config:set MDP_GOOGLE=${{ secrets.MDP_GOOGLE }} --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend

      # Arrêter les dynos sur Heroku pour éviter les frais
      - name: Stop Heroku dynos to avoid charges
        run: |
          heroku ps:stop web --app ${{ secrets.HEROKU_APP_NAME_BE }}-backend
          heroku ps:stop web --app ${{ secrets.HEROKU_APP_NAME_FE }}-frontend