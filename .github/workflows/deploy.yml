name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: VPS

    steps:
      # 1. Récupération du code depuis le repo GitHub
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Installation de Java 21 (nécéssaire pour compiler avec release 21)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'  # tu peux aussi mettre 'zulu' ou 'oracle' si tu préfères

      # 3. (Facultatif) Vérifie que Java 21 est bien actif
      - name: Check Java version
        run: java -version

      # 4. Connexion à Docker Hub avec identifiants secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Lancement des tests backend avec Maven
      - name: Run backend tests
        run: |
          if [ -d "backend" ]; then
            cd backend
            mvn test
          else
            echo "Dossier backend introuvable"; exit 1
          fi

      # 6. Lancement des tests frontend avec npm
      - name: Run frontend tests
        run: |
          if [ -d "frontend" ]; then
            cd frontend
            npm install
            npm run test
          else
            echo "Dossier frontend introuvable"; exit 1
          fi

      # 7. Build de l'image Docker backend + push sur Docker Hub
      - name: Build & push backend Docker image
        run: |
          cd backend
          mvn clean install -DskipTests
          docker build -t ${{ secrets.DOCKER_USERNAME }}/jo2024-backend .
          docker push ${{ secrets.DOCKER_USERNAME }}/jo2024-backend

      # 8. Build de l'image Docker frontend + push sur Docker Hub
      - name: Build & push frontend Docker image
        run: |
          cd frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/jo2024-frontend .
          docker push ${{ secrets.DOCKER_USERNAME }}/jo2024-frontend

      # 9. Déploiement distant sur le serveur via SSH
      - name: Deploy on remote server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: |
            POSTGRES_DB,
            POSTGRES_USER,
            POSTGRES_PASSWORD,
            POSTGRES_PORT,
            JWT_SECRET,
            JWT_EXPIRATION,
            ADMIN_EMAIL,
            ADMIN_PASSWORD,
            EMAIL_USERNAME,
            EMAIL_PASSWORD
          script: |
            echo "Backup de l'état actuel"
            
            docker ps --filter "status=running" > deploy-backup-containers.txt || echo "Aucun container actif"
            docker-compose logs > deploy-backup-logs.txt || echo "Aucun log à sauvegarder"
            
            echo "Pull des dernières images"
            docker pull ${{ secrets.DOCKER_USERNAME }}/jo2024-backend
            docker pull ${{ secrets.DOCKER_USERNAME }}/jo2024-frontend

            echo "Vérification de la disponibilité de la base de données"
            nc -zv db 5432 || (echo "Base de données non disponible" && exit 1)

            echo "Restart des services"
            docker-compose down
            docker-compose up -d --build

            echo "Vérification de la santé du backend"
            sleep 30  # Attente pour laisser le backend démarrer
            curl --fail http://localhost:8080/actuator/health || (echo "Le backend ne répond pas correctement" && exit 1)
