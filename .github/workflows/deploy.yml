name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: VPS

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Check Java version
        run: java -version

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run backend tests
        run: |
          if [ -d "backend" ]; then
            cd backend
            mvn test
          else
            echo "Dossier backend introuvable"; exit 1
          fi

      - name: Run frontend tests
        run: |
          if [ -d "frontend" ]; then
            cd frontend
            npm install
            npm run test
          else
            echo "Dossier frontend introuvable"; exit 1
          fi

      - name: Build & push backend Docker image
        run: |
          cd backend
          mvn clean install -DskipTests
          docker build -t ${{ secrets.DOCKER_USERNAME }}/jo2024-backend .
          docker push ${{ secrets.DOCKER_USERNAME }}/jo2024-backend

      - name: Build & push frontend Docker image
        run: |
          cd frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/jo2024-frontend .
          docker push ${{ secrets.DOCKER_USERNAME }}/jo2024-frontend

      - name: Deploy on remote server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Backup de l'état actuel"
            docker ps --filter "status=running" > deploy-backup-containers.txt || echo "Aucun container actif"
            docker-compose logs > deploy-backup-logs.txt || echo "Aucun log à sauvegarder"

            echo "Pull des dernières images"
            docker pull ${{ secrets.DOCKER_USERNAME }}/jo2024-backend
            docker pull ${{ secrets.DOCKER_USERNAME }}/jo2024-frontend

            echo "Création du fichier .env avec les secrets"
            cat <<EOF > .env
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}
            EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
            ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
            ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            ID_GOOGLE=${{ secrets.ID_GOOGLE }}
            MDP_GOOGLE=${{ secrets.MDP_GOOGLE }}
            EOF
  
            echo "Arrêt des services existants"
            docker-compose down
            
            echo "Démarrage des nouveaux services"
            docker-compose up -d --build
            
            echo "Vérification de la santé du backend"
            sleep 30
            curl --fail http://localhost:8080/actuator/health || (echo "Le backend ne répond pas correctement" && exit 1)