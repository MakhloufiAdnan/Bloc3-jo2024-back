name: Deploy to Heroku

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: VPS

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up JDK 21 for backend
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Check Java version
      - name: Check Java version
        run: java -version

      # 4. Install Heroku CLI
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku --version

      # 5. Set up Heroku authentication
      - name: Set up Heroku auth
        run: |
          echo "machine api.heroku.com" > ~/.netrc
          echo "  login ${{ secrets.HEROKU_EMAIL }}" >> ~/.netrc
          echo "  password ${{ secrets.HEROKU_API_KEY }}" >> ~/.netrc
          echo "machine git.heroku.com" >> ~/.netrc
          echo "  login ${{ secrets.HEROKU_EMAIL }}" >> ~/.netrc
          echo "  password ${{ secrets.HEROKU_API_KEY }}" >> ~/.netrc
          heroku auth:whoami

      # ========== BACKEND ==========
      - name: Build & Deploy Backend to Heroku
        run: |
          cd backend
          mvn clean install -DskipTests
          heroku stack:set container --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku container:login
          docker build . --platform linux/amd64 -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME_BE }}/web
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME_BE }}/web
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME_BE }}

      # Set backend Heroku config vars
      - name: Set Backend Heroku config vars
        run: |
          heroku config:set SPRING_PROFILES_ACTIVE=prod --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set POSTGRES_DB=${{ secrets.POSTGRES_DB }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set POSTGRES_USER=${{ secrets.POSTGRES_USER }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set JWT_SECRET=${{ secrets.JWT_SECRET }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set SMTP_HOST=${{ secrets.SMTP_HOST }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set SMTP_PORT=${{ secrets.SMTP_PORT }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set ID_GOOGLE=${{ secrets.ID_GOOGLE }} --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku config:set MDP_GOOGLE=${{ secrets.MDP_GOOGLE }} --app ${{ secrets.HEROKU_APP_NAME_BE }}

      # ========== FRONTEND ==========
      - name: Reset Docker build (prévention bug)
        run: docker builder prune -a -f

      - name: Build & Deploy Frontend to Heroku
        run: |
          echo "Contenu du répertoire frontend :"
          cd frontend && ls -la
          heroku stack:set container --app ${{ secrets.HEROKU_APP_NAME_FE }}
          heroku container:login
          docker build . --platform linux/amd64 -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME_FE }}/web
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME_FE }}/web
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME_FE }}

      # Set frontend Heroku config vars
      - name: Set Frontend Heroku config vars
        run: | 
          heroku config:set API_BASE_URL=${{ secrets.HEROKU_APP_NAME_BE }}.herokuapp.com --app ${{ secrets.HEROKU_APP_NAME_FE }}
          heroku config:set ENVIRONMENT=production --app ${{ secrets.HEROKU_APP_NAME_FE }}

      # Set frontend Heroku config vars
      - name: Set Frontend Heroku config vars
        run: |
          heroku config:set API_BASE_URL=${{ secrets.HEROKU_APP_NAME_BE }}.herokuapp.com --app ${{ secrets.HEROKU_APP_NAME_FE }}
          heroku config:set ENVIRONMENT=production --app ${{ secrets.HEROKU_APP_NAME_FE }}

      # Stop dynos : avoid fees
      - name: Stop Heroku Dynos
        if: ${{ false }} # désactivé par défaut
        run: |
          heroku ps:scale web=0 --app ${{ secrets.HEROKU_APP_NAME_BE }}
          heroku ps:scale web=0 --app ${{ secrets.HEROKU_APP_NAME_FE }}