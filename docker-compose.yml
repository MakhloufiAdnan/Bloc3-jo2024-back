services:
  db:
    image: postgres:17.0
    container_name: bloc3_db_jo2024
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "6000:5432"
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - jo2024_net

  backend:
    build:
      context: ./backend
    container_name: back_jo2024
    ports:
      - "8080:8080"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ID_GOOGLE: ${ID_GOOGLE}
      MDP_GOOGLE: ${MDP_GOOGLE}
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - jo2024_net

  frontend:
    build:
      context: ./frontend
    container_name: front_jo2024
    ports:
      - "80:80"
    environment:
      API_BASE_URL: back_jo2024:8080
    depends_on:
      - backend
    env_file:
      - .env
    networks:
      - jo2024_net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_jo2024
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - jo2024_net

volumes:
  db_data:

networks:
  jo2024_net:
    driver: bridge